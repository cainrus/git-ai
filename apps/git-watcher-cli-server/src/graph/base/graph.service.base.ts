/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Graph as PrismaGraph } from "@prisma/client";

export class GraphServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.GraphCountArgs, "select">): Promise<number> {
    return this.prisma.graph.count(args);
  }

  async graphs(args: Prisma.GraphFindManyArgs): Promise<PrismaGraph[]> {
    return this.prisma.graph.findMany(args);
  }
  async graph(args: Prisma.GraphFindUniqueArgs): Promise<PrismaGraph | null> {
    return this.prisma.graph.findUnique(args);
  }
  async createGraph(args: Prisma.GraphCreateArgs): Promise<PrismaGraph> {
    return this.prisma.graph.create(args);
  }
  async updateGraph(args: Prisma.GraphUpdateArgs): Promise<PrismaGraph> {
    return this.prisma.graph.update(args);
  }
  async deleteGraph(args: Prisma.GraphDeleteArgs): Promise<PrismaGraph> {
    return this.prisma.graph.delete(args);
  }
}
